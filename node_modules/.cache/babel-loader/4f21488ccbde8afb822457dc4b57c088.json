{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gusta\\\\OneDrive\\\\Documentos\\\\GitHub\\\\tcc-construhelp\\\\src\\\\js\\\\Header.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { Drawer, Button, Icon, List, Divider, ListItem, ListItemText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'; // Drawer do Material UI\n\nimport '../css/Header.css';\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  }\n});\nexport default function TemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    menu: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === 'top' || anchor === 'bottom'\n    }),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, true) // true para manter o menu ativo ao clicar \n    ,\n    onKeyDown: toggleDrawer(anchor, true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.margin + \" btn-addWorkspace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Add Workspace\"), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, ['Workspace 1', 'Workspace 2', 'Workspace 3'].map((text, index) => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, ['Settings', 'Logout'].map((text, index) => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: text,\n    className: text === \"Logout\" ? \"logoutOption\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  })))));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerApp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, ['menu'].map(anchor => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: anchor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer(anchor, true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    className: \"iconMenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, \"menu\")), /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"left\",\n    open: state[anchor],\n    onClose: toggleDrawer(anchor, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, list(anchor)))), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"titleHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"ConstruHelp\"));\n}","map":{"version":3,"sources":["C:/Users/gusta/OneDrive/Documentos/GitHub/tcc-construhelp/src/js/Header.js"],"names":["React","clsx","Drawer","Button","Icon","List","Divider","ListItem","ListItemText","makeStyles","useStyles","list","width","fullList","TemporaryDrawer","classes","state","setState","useState","menu","toggleDrawer","anchor","open","event","type","key","margin","map","text","index"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { Drawer, Button, Icon, List, Divider, ListItem, ListItemText } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// Drawer do Material UI\r\n\r\nimport '../css/Header.css';\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n});\r\n\r\nexport default function TemporaryDrawer() {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        menu: false\r\n    });\r\n\r\n    const toggleDrawer = (anchor, open) => event => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const list = anchor => (\r\n        <div\r\n            className={clsx(classes.list, {\r\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n            })}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, true)} // true para manter o menu ativo ao clicar \r\n            onKeyDown={toggleDrawer(anchor, true)}\r\n        >\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.margin + \" btn-addWorkspace\"}>\r\n                Add Workspace\r\n            </Button>\r\n            <List>\r\n                {['Workspace 1', 'Workspace 2', 'Workspace 3'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {['Settings', 'Logout'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemText primary={text} className={text === \"Logout\" ? \"logoutOption\" : \"\"} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"headerApp\">\r\n            {['menu'].map(anchor => (\r\n                <React.Fragment key={anchor}>\r\n                    <Button onClick={toggleDrawer(anchor, true)}>\r\n                        <Icon className=\"iconMenu\">menu</Icon>\r\n                    </Button>\r\n                    <Drawer anchor={\"left\"} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n                        {list(anchor)}\r\n                    </Drawer>\r\n                </React.Fragment>\r\n            ))}\r\n            <h3 className=\"titleHeader\">ConstruHelp</h3>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}